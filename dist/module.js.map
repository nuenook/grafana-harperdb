{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./ConfigEditor.tsx","webpack:///./QueryEditor.tsx","webpack:///./datasource.ts","webpack:///./module.tsx","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/ui\"","webpack:///external \"react\""],"names":[],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.tsx\");\n","// Libraries\nimport React, { PureComponent } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { DataSourceHttpSettings } from '@grafana/ui';\n\ntype Props = DataSourcePluginOptionsEditorProps<any>;\n\n interface states {\n  defaultUrl: string;\n }\nexport class ConfigEditor extends PureComponent<Props, states> {\n\n  \n  state = {\n    defaultUrl: \"http://localhost:9920\"\n  }\n  render() {\n    return (<div>\n      <DataSourceHttpSettings\n        defaultUrl={this.state.defaultUrl}\n        onChange={this.props.onOptionsChange}\n        dataSourceConfig={this.props.options}\n        showAccessOptions={true}\n      />\n    </div>)\n  }\n}\n","import { TemplateDatasource } from './datasource';\nimport { TemplateQuery } from './types';\n\nimport { Select, QueryField } from '@grafana/ui';\n\nimport { SelectableValue, QueryEditorProps } from '@grafana/data';\n\nimport React, { PureComponent } from 'react';\n\nexport type Props = QueryEditorProps<TemplateDatasource>;\n\nconst FORMAT_OPTIONS: Array<SelectableValue<string>> = [\n  { label: 'Time series', value: 'time_series' }\n];\n\ninterface State {\n  formatOption: SelectableValue<string>;\n};\n\nexport class TemplateQueryEditor extends PureComponent<Props, State> {\n\n  query: TemplateQuery;\n\n  constructor(props: Props) {\n    super(props);\n    const { query } = props;\n\n    this.query = query;\n\n    this.state = {\n      formatOption: FORMAT_OPTIONS.find(option => option.value === this.query.format) || FORMAT_OPTIONS[0],\n    }\n  }\n\n  onRunQuery = () => {\n    const { query } = this;\n    this.props.onChange(query);\n    this.props.onRunQuery();\n  };\n\n  onFormatChange = (option: SelectableValue<string>) => {\n    this.query.format = option.value;\n    this.setState({ formatOption: option }, this.onRunQuery);\n  };\n\n  onQueryChange = (value: string) => {\n    this.query.metric = value\n  }\n\n  render() {\n    const { formatOption } = this.state;\n\n    return (\n      <div>\n        <div className=\"gf-form\">\n          <div className=\"gf-form-label\">Format</div>\n          <Select\n            allowCustomValue={true}\n            isSearchable={false} options={FORMAT_OPTIONS} onChange={this.onFormatChange} value={formatOption} />\n            <QueryField \n              query={\"SELECT metric time\"}\n              portalOrigin={\"eiei\"}\n              onChange={this.onQueryChange}\n              onRunQuery={this.onRunQuery}\n            />\n        </div>\n      </div>\n    );\n  }\n}\n","import { TemplateQuery } from './types';\n\nimport {\n  DataSourceApi,\n  DataQueryRequest,\n  DataSourceInstanceSettings,\n} from '@grafana/data';\nimport { TimeSeries } from '@grafana/data';\n\n\nexport class TemplateDatasource extends DataSourceApi<TemplateQuery> {\n\n  type: string;\n  url: string;\n  name: string;\n  headers: any;\n  withCredentials: boolean;\n\n  /** @ngInject */\n  constructor(instanceSettings: DataSourceInstanceSettings, private backendSrv) {\n    super(instanceSettings);\n\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.backendSrv = backendSrv;\n    this.name = instanceSettings.name;\n\n    this.withCredentials = instanceSettings.withCredentials;\n\n    this.headers = { 'Content-Type': 'application/json' };\n    if (typeof instanceSettings.basicAuth === 'string' && instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n  }\n\n  convertToDatapoints(datas: any[]) {\n    return datas.reduce((arr: any[], d)=> {\n      return [...arr , [d.metric, d.time]]\n    },[])\n  }\n\n  callHarperdbSQL(target: string, sql: string) {\n    return new Promise((res, rej) => {\n      this.doRequest({\n        url: this.url,\n        method: 'POST',\n        data: {\n          operation: 'sql',\n          sql\n        },\n      }).then((response: any) => {\n\n        response.data = { target, datapoints: this.convertToDatapoints(response.data) }\n        res(response)\n      })\n        .catch((err: any) => {\n          console.log(\"error \", err)\n          res({...err, message: err.data.message, error: err.data.error})\n        })\n    })\n  }\n\n  async buildQueryPattern(targets: TemplateQuery[]) {\n    const promiseArr = targets.map(t => this.callHarperdbSQL(t.refId, t.metric))\n\n    const results: any = await Promise.all(promiseArr);\n\n    const someItemError = results.find((r: any) => r.status !== 200)\n\n    let responseSentBack;\n\n    if(someItemError) {\n      \n      responseSentBack = someItemError\n    } else {\n      responseSentBack = results[0]\n    }\n\n    /// format grafana's responses\n    responseSentBack.data = results.filter(f => f.status === 200).reduce((arr, r) => {\n        return [...arr, r.data]\n    }, [])\n\n    return responseSentBack\n  }\n\n  async query(options: DataQueryRequest<TemplateQuery>): Promise<{ data: TimeSeries[] }> {\n\n    const targets = options.targets.filter(t => !t.hide);\n\n    await this.buildQueryPattern(options.targets)\n\n    if (targets.length <= 0) {\n      return { data: [] };\n    }\n\n    // return {\n    //   data: targets.map(t => ({\n    //     target: t.refId,\n    //     datapoints: [\n    //       [3.14, options.range.from.valueOf()],\n    //       [42, options.range.to.valueOf()]\n    //     ]\n    //   }))\n    // };\n    return await this.buildQueryPattern(options.targets)\n  }\n\n  async testDatasource() {\n    return this.doRequest({\n      url: this.url,\n      method: 'POST',\n      data: {\n        operation: 'describe_all',\n      },\n    }).then((response: any) => {\n      if (response.status === 200) {\n        return {\n          status: 'success',\n          message: 'Data source is working',\n          title: 'Success',\n        };\n      }\n\n      return {\n        status: 'error',\n        message: 'Data source somthing when wrong',\n        title: 'Error',\n      };\n    });\n  }\n\n  async metricFindQuery(query: string) {\n    return [\n      {\n        text: 'Metric Name',\n        value: 'metric_name'\n      }\n    ];\n  }\n\n  doRequest(options: any) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n}\n","import { TemplateDatasource } from './datasource';\nimport { TemplateQueryEditor } from './QueryEditor';\nimport { ConfigEditor } from './ConfigEditor';\n\nimport { DataSourcePlugin } from '@grafana/data';\n\nexport const plugin = new DataSourcePlugin(TemplateDatasource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(TemplateQueryEditor);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_data__;","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_ui__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;"],"sourceRoot":""}